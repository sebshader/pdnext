#N canvas 440 23 640 666 12;
#X obj 196 121 inlet;
#X obj 137 413 line~;
#X obj 114 317 sqrt;
#X obj 137 577 *~;
#X obj 137 441 *~;
#X obj 137 468 *~;
#X obj 137 617 outlet~;
#X obj 365 411 line~;
#X obj 365 439 *~;
#X obj 365 467 *~;
#X obj 252 295 mtof;
#X obj 252 215 +;
#X obj 252 319 sqrt;
#X obj 252 343 sqrt;
#X obj 365 384 pack;
#X obj 57 354 r reset;
#X msg 57 378 0 20;
#X obj 226 434 noise~;
#X obj 317 271 +;
#X obj 317 294 mtof;
#X obj 317 318 sqrt;
#X obj 317 342 sqrt;
#X obj 410 411 line~;
#X obj 410 439 *~;
#X obj 410 467 *~;
#X obj 410 384 pack;
#X obj 322 411 line~;
#X obj 322 439 *~;
#X obj 322 467 *~;
#X obj 322 384 pack;
#X obj 196 296 mtof;
#X obj 196 320 sqrt;
#X obj 196 344 sqrt;
#X obj 196 274 -;
#X obj 155 517 vcf~ 10;
#X obj 226 517 vcf~ 10;
#X obj 297 517 vcf~ 10;
#X text 55 431 Amplitude;
#X text 56 447 envelope;
#X obj 114 290 / 2;
#X obj 67 257 data-array amp;
#X obj 281 186 data-array pitch;
#X obj 137 358 pack;
#N canvas 457 62 630 588 sequence 0;
#X obj 144 150 inlet;
#X obj 263 387 *;
#X obj 156 244 r reset-stop;
#X obj 176 438 outlet;
#X obj 432 438 outlet;
#X obj 176 387 pointer;
#X obj 144 333 t b b;
#X obj 263 328 -;
#X obj 281 280 t f f;
#X obj 87 387 s next-evt;
#X obj 281 357 r delay-multiplier;
#X obj 144 307 delay;
#X obj 281 248 get template-event x y;
#X text 28 16 Here we carry out the actual sequencing. We get a pointer to the scalar and get its x/y coordinates. The y-value is sent to the right outlet and the x-value is taken as a time stamp \, so we get the time difference from it and the last event \, multiply it by a "delay-multiplier" value that depends on the "tempo" parameter and send this to a [delay] object. When [delay] sends a bang \, the pointer to the scalar is sent to the left outlet and we ask for the next event ("next-evt") \, which calls the next pointer in the [pd synthesis] window., f 80;
#X text 153 470 pointer (delayed);
#X text 418 463 y-value *;
#X text 45 519 * The y-value is used for pitch and is summed to the y-values of the pitch array. Because the units on the data window is "0.25" \, the pitch jumps in eighth-tones., f 74;
#X msg 197 276 0;
#X obj 144 202 trigger bang pointer;
#X text 193 149 pointer;
#X connect 0 0 18 0;
#X connect 1 0 11 1;
#X connect 2 0 11 0;
#X connect 2 0 17 0;
#X connect 5 0 3 0;
#X connect 6 0 9 0;
#X connect 6 1 5 0;
#X connect 7 0 1 0;
#X connect 8 0 7 1;
#X connect 8 1 7 0;
#X connect 10 0 1 1;
#X connect 11 0 6 0;
#X connect 12 0 8 0;
#X connect 12 1 4 0;
#X connect 17 0 7 1;
#X connect 18 0 11 0;
#X connect 18 1 5 1;
#X connect 18 1 12 0;
#X restore 196 156 pd sequence;
#X text 39 17 This is an abstraction used in the sequencer example. Here we take care of the audio synthesis \, according to timed controls from [pd sequence] and [data-array] subpatches., f 73;
#X text 39 66 Pitch resolution is in eighth-tones (because 4 pixels per half tone looks reasonable on the screen.), f 73;
#X text 445 465 calculate time-varying center frequencies for three [vcf~] objects acting on a noise source., f 22;
#X connect 0 0 43 0;
#X connect 1 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 42 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 4 0 5 1;
#X connect 5 0 3 0;
#X connect 7 0 8 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 8 0 9 1;
#X connect 9 0 35 1;
#X connect 10 0 12 0;
#X connect 11 0 33 0;
#X connect 11 0 10 0;
#X connect 11 0 18 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 7 0;
#X connect 15 0 16 0;
#X connect 16 0 1 0;
#X connect 17 0 34 0;
#X connect 17 0 35 0;
#X connect 17 0 36 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 25 0;
#X connect 22 0 23 0;
#X connect 22 0 23 1;
#X connect 23 0 24 0;
#X connect 23 0 24 1;
#X connect 24 0 36 1;
#X connect 25 0 22 0;
#X connect 26 0 27 0;
#X connect 26 0 27 1;
#X connect 27 0 28 0;
#X connect 27 0 28 1;
#X connect 28 0 34 1;
#X connect 29 0 26 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 29 0;
#X connect 33 0 30 0;
#X connect 34 0 3 1;
#X connect 35 0 3 1;
#X connect 36 0 3 1;
#X connect 39 0 2 0;
#X connect 40 1 39 0;
#X connect 40 2 42 1;
#X connect 41 0 11 0;
#X connect 41 1 33 1;
#X connect 41 1 18 1;
#X connect 41 2 14 1;
#X connect 41 2 29 1;
#X connect 41 2 25 1;
#X connect 42 0 1 0;
#X connect 43 0 40 0;
#X connect 43 0 41 0;
#X connect 43 1 11 1;
